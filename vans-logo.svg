<?xml version="1.0" encoding="UTF-8"?>
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 312.28 106.9">
  <defs>
    <style>
      .cls-1 {
        fill: #d51920;
      }
    </style>
  </defs>
  <path class="cls-1" d="m305.08,52.23h-18.06c-1.75-4.44-3.71-7.89-13.83-7.89-7,0-10,2.88-10,5.77,0,3.16,2.49,5.82,10.2,7.53l16.36,4.36c10.71,2.86,15.9,11.36,15.9,20.34,0,5-1.08,11-5.82,16-3.54,3.69-8.9,8.56-26.67,8.56-24.44,0-32.47-15.45-32.47-24.78h19c1.87,6.82,6.55,9.41,15.81,9.41,6.42,0,11.93-2.29,11.93-7.2s-4-6.43-9.15-7.84l-12.93-3.49c-6.23-1.9-11.44-3.42-15.12-6.53-9.63-8.16-8.93-22.89,1.54-30.55,5.8-4.24,11.74-6.45,21.17-6.45,11.08,0,17.41,3.16,22.39,6.6,4.42,3,9.67,10.38,9.67,16.2M0,.04c.15.65,37.8,106,37.8,106h22.47L94.88,18.34h215L311.51.01H78.41l-28.72,72.67L23.88,0H.05m185.83,68.09l28.06,37.89h17.56V31.05h-20.22v40.75l-25.4-40.75h-19.4v74.93h19.4v-37.89h0Zm126.35,34c0-2.21-1.79-4-4-4s-4,1.79-4,4,1.79,4,4,4c2.21.03,4.02-1.74,4.05-3.95,0-.02,0-.03,0-.05h-.05Zm-.46,0c0,1.94-1.59,3.52-3.53,3.51-1.94,0-3.52-1.59-3.51-3.53s1.59-3.52,3.53-3.51c1.93-.03,3.53,1.51,3.56,3.44,0,.03,0,.06,0,.09h-.05Zm-1.62-.83c0-.79-.65-1.42-1.44-1.42-.07,0-.15,0-.22.02h-1.88v4.24h.94v-1.36h.74l.9,1.36h1.09l-1-1.52c.57-.18.95-.72.92-1.32h-.05Zm-.95.05c0,.34-.27.62-.61.63-.04,0-.07,0-.11,0h-.94v-1.24h.91c.33-.09.68.1.78.44.02.06.03.13.02.19h-.05Zm-230.32,4.66h21.55l4-11.72h28.53l4.13,11.72h21.22l-27.16-74.93h-22.85l-29.42,74.93Zm31.6-25.28l8.35-24.91,8.24,24.91h-16.64.05Z"/>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>